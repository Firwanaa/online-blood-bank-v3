{"ast":null,"code":"import { BloodType } from 'src/app/enumerations/bloodType.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../donor.service\";\nimport * as i2 from \"src/app/service/notification.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction DonorListComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const bloodType_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", bloodType_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", bloodType_r2, \" \");\n  }\n}\n\nfunction DonorListComponent_ng_container_65_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"span\", 22);\n    i0.ɵɵtext(14, \"Available\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"span\", 23);\n    i0.ɵɵtext(16, \"Unavailable\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"td\")(18, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function DonorListComponent_ng_container_65_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const donor_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.SendRequest(donor_r3.username);\n    });\n    i0.ɵɵtext(19, \" Send Request \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(20, \"td\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const donor_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(donor_r3.userId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(donor_r3.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(donor_r3.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(donor_r3.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(donor_r3.bloodType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !donor_r3[\"available\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", donor_r3[\"available\"]);\n  }\n}\n\nexport let DonorListComponent = /*#__PURE__*/(() => {\n  class DonorListComponent {\n    constructor(donorService, notificationService) {\n      this.donorService = donorService;\n      this.notificationService = notificationService;\n      this.donors = [];\n      this.bloodTypes = Object.values(BloodType);\n      this.city = '';\n      this.hospital_icon = {\n        url: '../../../assets/hospital.png',\n        scaledSize: new google.maps.Size(50, 50) // scaled size\n\n      };\n      this.person_icon = {\n        url: '../../../assets/person.png',\n        scaledSize: new google.maps.Size(50, 50) // scaled size\n\n      };\n    }\n\n    ngOnInit() {\n      this.donorService.getDonors().subscribe(donors => {\n        this.donors = donors;\n        console.log(donors);\n        donors.forEach(d => {\n          console.log(d['available']);\n          console.log(d['userID']);\n        });\n        this.notificationService.notify('success', donors.length + ' donors loaded successfully');\n        this.initMap(donors);\n      }, error => console.log(error));\n    }\n\n    SearchCity(city) {\n      this.donorService.findByCity(this.city.toString()).subscribe(donors => {\n        this.donors = donors;\n        this.initMap(donors);\n      }, error => console.log(error));\n    }\n\n    ResetFilter() {\n      this.donorService.getDonors().subscribe(donors => {\n        this.donors = donors;\n        console.log(donors);\n        donors.forEach(d => {\n          console.log(d['available']);\n          console.log(d['lat']);\n        });\n        this.notificationService.notify('success', donors.length + ' donors loaded successfully');\n        this.initMap(donors);\n      }, error => console.log(error));\n    }\n\n    SearchBloodType(bloodType) {\n      this.donorService.findByDonorBloodtype(bloodType).subscribe(donors => {\n        this.donors = donors;\n        this.initMap(donors);\n        this.notificationService.notify('success', donors.length + ' donors loaded successfully');\n      }, error => console.log(error));\n    }\n\n    SearchAvailability(isAvailable) {\n      this.donorService.findByIsAvailable(isAvailable).subscribe(donors => {\n        this.donors = donors;\n        this.initMap(donors);\n        this.notificationService.notify('success', donors.length + ' donors loaded successfully');\n      }, error => console.log(error));\n    }\n\n    EmergencyRequest() {\n      this.donorService.sendEmergencyRequest();\n      this.notificationService.notify('error', 'Emergency Declared');\n    }\n\n    initMap(donors) {\n      const myLatLng = {\n        lat: 43.6532,\n        lng: -79.3832\n      };\n      const institute = {\n        lat: 43.65602,\n        lng: -79.7387\n      };\n      const map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 9,\n        center: myLatLng\n      });\n      donors.forEach(d => {\n        new google.maps.Marker({\n          position: {\n            lat: d['lat'],\n            lng: d['lng']\n          },\n          map,\n          label: d['bloodType'],\n          title: 'Username: ' + d['username'],\n          icon: this.person_icon\n        });\n      });\n      new google.maps.Marker({\n        position: institute,\n        map,\n        title: 'institution#1!',\n        icon: this.hospital_icon\n      });\n    }\n\n    SendRequest(email) {\n      this.donorService.SendRequest(email).subscribe();\n      this.notificationService.notify('success', ' Email sent successfully!');\n    }\n\n  }\n\n  DonorListComponent.ɵfac = function DonorListComponent_Factory(t) {\n    return new (t || DonorListComponent)(i0.ɵɵdirectiveInject(i1.DonorService), i0.ɵɵdirectiveInject(i2.NotificationService));\n  };\n\n  DonorListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DonorListComponent,\n    selectors: [[\"app-donor-list\"]],\n    decls: 66,\n    vars: 7,\n    consts: [[\"src\", \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/101448/wedding-divider-png-9.png\", 1, \"image-divider\"], [\"id\", \"map\"], [\"id\", \"sec1\", 1, \"inlineDiv\"], [1, \"form-row\"], [\"placeholder\", \"Search by City\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"type\", 1, \"form-row\"], [\"name\", \"bloodType\", \"required\", \"\", 1, \"custom-select\", 3, \"ngModel\", \"keyup.enter\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"avail\", 1, \"form-row\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"sec2\", 1, \"inlineDiv\"], [\"type\", \"reset\", 1, \"btn\", \"btn-info\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\"], [\"id\", \"sec3\", 1, \"inlineDiv\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-danger\"], [1, \"table-responsive\"], [2, \"width\", \"-webkit-fill-available\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\", \"bg-success\", 3, \"hidden\"], [1, \"badge\", \"bg-danger\", 3, \"hidden\"], [1, \"btn\", \"btn-info\", 3, \"click\"]],\n    template: function DonorListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"img\", 0)(1, \"br\")(2, \"div\", 1)(3, \"br\")(4, \"br\")(5, \"img\", 0)(6, \"br\")(7, \"br\");\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"div\", 3)(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function DonorListComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.city = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \"\\u00A0 \");\n        i0.ɵɵelementStart(12, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DonorListComponent_Template_button_click_12_listener() {\n          return ctx.SearchCity(ctx.city);\n        });\n        i0.ɵɵtext(13, \" Submit \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 6)(15, \"select\", 7);\n        i0.ɵɵlistener(\"keyup.enter\", function DonorListComponent_Template_select_keyup_enter_15_listener() {\n          return ctx.SearchBloodType(ctx.bloodType);\n        })(\"ngModelChange\", function DonorListComponent_Template_select_ngModelChange_15_listener($event) {\n          return ctx.bloodType = $event;\n        });\n        i0.ɵɵtemplate(16, DonorListComponent_option_16_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(17, \"\\u00A0 \");\n        i0.ɵɵelementStart(18, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DonorListComponent_Template_button_click_18_listener() {\n          return ctx.SearchBloodType(ctx.bloodType);\n        });\n        i0.ɵɵtext(19, \" Submit \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\")(21, \"div\", 9)(22, \"select\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function DonorListComponent_Template_select_ngModelChange_22_listener($event) {\n          return ctx.isAvailable = $event;\n        });\n        i0.ɵɵelementStart(23, \"option\", 11);\n        i0.ɵɵtext(24, \"Available\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\", 11);\n        i0.ɵɵtext(26, \"Not Available\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(27, \"\\u00A0 \");\n        i0.ɵɵelementStart(28, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function DonorListComponent_Template_button_click_28_listener() {\n          return ctx.SearchAvailability(ctx.isAvailable);\n        });\n        i0.ɵɵtext(29, \" Search Availability \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵelementStart(31, \"div\", 13)(32, \"div\", 3)(33, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function DonorListComponent_Template_button_click_33_listener() {\n          return ctx.ResetFilter();\n        });\n        i0.ɵɵtext(34, \" Reset Table \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 3)(36, \"button\", 15);\n        i0.ɵɵtext(37, \" Reset Filters \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(38, \"br\");\n        i0.ɵɵelementStart(39, \"div\", 16)(40, \"div\", 3)(41, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function DonorListComponent_Template_button_click_41_listener() {\n          return ctx.EmergencyRequest();\n        });\n        i0.ɵɵtext(42, \" Send Emergency Request To All \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(43, \"div\", 3)(44, \"button\", 18);\n        i0.ɵɵtext(45, \" Cancel Emergency Request To All \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(46, \"img\", 0)(47, \"br\");\n        i0.ɵɵelementStart(48, \"div\", 19)(49, \"table\", 20)(50, \"tr\")(51, \"th\");\n        i0.ɵɵtext(52, \"User ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"th\");\n        i0.ɵɵtext(54, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"th\");\n        i0.ɵɵtext(56, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"th\");\n        i0.ɵɵtext(58, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"th\");\n        i0.ɵɵtext(60, \"Blood Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"th\");\n        i0.ɵɵtext(62, \"Is available\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"th\");\n        i0.ɵɵtext(64, \"Send Request\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(65, DonorListComponent_ng_container_65_Template, 21, 7, \"ng-container\", 21);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.city);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.bloodType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.bloodTypes);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.isAvailable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", false);\n        i0.ɵɵadvance(40);\n        i0.ɵɵproperty(\"ngForOf\", ctx.donors);\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i3.SelectControlValueAccessor, i3.RequiredValidator, i4.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n    styles: [\"#map[_ngcontent-%COMP%]{height:400px;width:100%;border:2px soild blue}button[_ngcontent-%COMP%]{margin-right:15px;margin-bottom:5px;background-color:#aa336a;color:#fff}.image-divider[_ngcontent-%COMP%]{margin:20px 0;width:100%}#sec1[_ngcontent-%COMP%]{position:relative;left:18%}input[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{height:35px}#sec2[_ngcontent-%COMP%]{position:relative;left:38%}#sec3[_ngcontent-%COMP%]{position:relative;left:25%}\"]\n  });\n  return DonorListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}